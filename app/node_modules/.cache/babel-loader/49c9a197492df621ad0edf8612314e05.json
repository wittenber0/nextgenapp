{"ast":null,"code":"import _classCallCheck from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wittenber0/Desktop/mqp/nextgenapp/app/src/components/TableComponent.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n};\n\nvar TableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableComponent, _Component);\n\n  function TableComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.refreshButtons = function () {\n      var buttons = document.getElementsByClassName(\"option-button\");\n\n      for (var i = 0; i < buttons.length; i++) {\n        _this.setUnblocked(buttons[i]);\n      }\n    };\n\n    _this.blockFlow = function (id, e) {\n      if (e.target.nodeName === \"SPAN\") {\n        e.target = e.target.parentElement;\n      }\n\n      if (e.target.firstChild.innerHTML === \"Block\") {\n        _this.setBlocked(e.target);\n\n        console.log(\"block \" + id);\n\n        _this.props.logs.push(new Date().getTime() + \": Blocked \" + id);\n      } else {\n        _this.setUnblocked(e.target);\n\n        console.log(\"unblock \" + id);\n\n        _this.props.logs.push(new Date().getTime() + \": Unblocked \" + id);\n      }\n    };\n\n    _this.setBlocked = function (tar) {\n      tar.firstChild.innerHTML = \"Blocked\";\n      tar.className = \"MuiButtonBase-root-29 MuiButton-root-3 MuiButton-outlined-11 MuiButton-outlinedSecondary-13 option-button\";\n    };\n\n    _this.setUnblocked = function (tar) {\n      tar.firstChild.innerHTML = \"Block\";\n      tar.className = \"MuiButtonBase-root-29 MuiButton-root-3 MuiButton-outlined-11 option-button\";\n    };\n\n    _this.insertBlockButton = function (id) {\n      if (_this.props.options === true) {\n        return React.createElement(CustomTableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"option-button\",\n          variant: \"outlined\",\n          onClick: function onClick(e) {\n            _this.blockFlow(id, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Block\"));\n      }\n    };\n\n    _this.insertRowHeader = function (row) {\n      if (_this.props.rowheaders) {\n        return React.createElement(CustomTableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: _this.props.saveIndicator,\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, _this.props.rowheaders[row]));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TableComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.refreshButtons();\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.rows.map(function (r, i) {\n        return React.createElement(CustomTableCell, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, r);\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.props.data.map(function (r, i) {\n        return React.createElement(TableRow, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, _this2.insertRowHeader(i), r.map(function (c, i2) {\n          return React.createElement(CustomTableCell, {\n            key: i2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, c);\n        }), _this2.insertBlockButton(r[0]));\n      }))));\n    }\n  }]);\n\n  return TableComponent;\n}(Component);\n\nexport default withStyles(styles)(TableComponent);","map":{"version":3,"sources":["/home/wittenber0/Desktop/mqp/nextgenapp/app/src/components/TableComponent.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","withStyles","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","background","default","TableComponent","refreshButtons","buttons","document","getElementsByClassName","i","length","setUnblocked","blockFlow","id","e","target","nodeName","parentElement","firstChild","innerHTML","setBlocked","console","log","props","logs","push","Date","getTime","tar","className","insertBlockButton","options","insertRowHeader","rowheaders","saveIndicator","rows","map","r","data","c","i2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nclass TableComponent extends Component{\n\n  refreshButtons = () =>{\n    let buttons = document.getElementsByClassName(\"option-button\");\n\n    for(let i=0; i<buttons.length; i++){\n      this.setUnblocked(buttons[i]);\n    }\n  }\n\n  blockFlow = (id, e) => {\n    if(e.target.nodeName === \"SPAN\"){\n      e.target = e.target.parentElement;\n    }\n\n    if(e.target.firstChild.innerHTML === \"Block\"){\n      this.setBlocked(e.target);\n      console.log(\"block \" + id);\n      this.props.logs.push((new Date()).getTime()+\": Blocked \"+id);\n    }else{\n      this.setUnblocked(e.target);\n      console.log(\"unblock \" + id);\n      this.props.logs.push((new Date()).getTime()+\": Unblocked \"+id);\n    }\n  }\n\n  setBlocked = (tar) => {\n    tar.firstChild.innerHTML = \"Blocked\";\n    tar.className = \"MuiButtonBase-root-29 MuiButton-root-3 MuiButton-outlined-11 MuiButton-outlinedSecondary-13 option-button\";\n  }\n\n  setUnblocked = (tar) =>{\n    tar.firstChild.innerHTML = \"Block\";\n    tar.className = \"MuiButtonBase-root-29 MuiButton-root-3 MuiButton-outlined-11 option-button\";\n  }\n\n  insertBlockButton = (id)=>{\n    if(this.props.options===true){\n      return(<CustomTableCell><Button className=\"option-button\" variant=\"outlined\" onClick={(e)=>{this.blockFlow(id, e)}}>Block</Button></CustomTableCell>)\n    }\n  }\n\n  insertRowHeader = (row) =>{\n    if(this.props.rowheaders){\n      return(<CustomTableCell><Button onClick={this.props.saveIndicator} variant=\"outlined\">{this.props.rowheaders[row]}</Button></CustomTableCell>);\n    }\n  }\n\n  render(){\n    this.refreshButtons();\n    return(\n      <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n          {this.props.rows.map((r, i)=>{\n            return (<CustomTableCell key={i}>{r}</CustomTableCell>);\n          })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {this.props.data.map((r, i)=>{\n          return(\n            <TableRow key={i}>\n            {this.insertRowHeader(i)}\n            {r.map((c, i2)=>{\n              return(<CustomTableCell key={i2}>{c}</CustomTableCell>)\n            })}\n            {this.insertBlockButton(r[0])}\n            </TableRow>\n          );\n        })}\n        </TableBody>\n      </Table>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(TableComponent);\n"]},"metadata":{},"sourceType":"module"}