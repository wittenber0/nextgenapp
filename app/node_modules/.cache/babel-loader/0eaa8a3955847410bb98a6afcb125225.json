{"ast":null,"code":"var _jsxFileName = \"/home/wittenber0/Desktop/mqp/nextgenapp/app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route } from 'react-router-dom';\nimport FlowPage from './components/FlowPage';\nimport StartPage from './components/StartPage';\nimport SingleFlowComponent from './components/SingleFlowComponent';\nimport PhaseBreakPage from './components/PhaseBreakPage';\nvar logs = [];\nvar phaseswitch = false;\nReactDOM.render(React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: function component() {\n    return React.createElement(App, {\n      logs: logs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/flows\",\n  component: function component() {\n    return React.createElement(FlowPage, {\n      logs: logs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/policies\",\n  component: FlowPage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/flow:flowid\",\n  component: Child,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/phase2\",\n  component: function component() {\n    return React.createElement(PhaseBreakPage, {\n      logs: logs,\n      phase: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/phase3\",\n  component: function component() {\n    return React.createElement(PhaseBreakPage, {\n      logs: logs,\n      phase: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: function component() {\n    return React.createElement(StartPage, {\n      logs: logs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}))), document.getElementById('root'));\n\nfunction Child(_ref) {\n  var match = _ref.match;\n  return React.createElement(SingleFlowComponent, {\n    rowid: match.params.flowid,\n    phaseswitch: phaseswitch,\n    logs: logs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n/*const Roster = () => (\n  <div>\n    <h2>This is a roster page!</h2>\n    <Switch>\n      <Route path='/RunningLog' component={RunningLogPage}/>\n      <Route path='/SleepingLog' component={SleepingLogPage}/>\n      <Route path='/' component={App}/>\n    </Switch>\n  </div>\n)*/\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/wittenber0/Desktop/mqp/nextgenapp/app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Route","FlowPage","StartPage","SingleFlowComponent","PhaseBreakPage","logs","phaseswitch","render","Child","document","getElementById","match","params","flowid","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route } from 'react-router-dom';\nimport FlowPage from './components/FlowPage';\nimport StartPage from './components/StartPage';\nimport SingleFlowComponent from './components/SingleFlowComponent';\nimport PhaseBreakPage from './components/PhaseBreakPage';\n\nlet logs=[];\nlet phaseswitch = false;\n\nReactDOM.render(\n  <BrowserRouter>\n    <div>\n      <Route path=\"/\" component={()=>{return(<App logs={logs} />)}} />\n      <Route path=\"/flows\" component={()=>{return(<FlowPage logs={logs}></FlowPage>)}} />\n      <Route path=\"/policies\" component={FlowPage} />\n      <Route path=\"/flow:flowid\" component={Child} />\n      <Route path=\"/phase2\" component={()=>{return(<PhaseBreakPage logs={logs} phase={2}></PhaseBreakPage>)}} />\n      <Route path=\"/phase3\" component={()=>{return(<PhaseBreakPage logs={logs} phase={3}></PhaseBreakPage>)}} />\n      <Route exact path=\"/\" component={()=>{return(<StartPage logs={logs}></StartPage>)}} />\n    </div>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\nfunction Child({ match }) {\n  return(<SingleFlowComponent rowid={match.params.flowid} phaseswitch={phaseswitch} logs={logs}></SingleFlowComponent>);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n/*const Roster = () => (\n  <div>\n    <h2>This is a roster page!</h2>\n    <Switch>\n      <Route path='/RunningLog' component={RunningLogPage}/>\n      <Route path='/SleepingLog' component={SleepingLogPage}/>\n      <Route path='/' component={App}/>\n    </Switch>\n  </div>\n)*/\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}