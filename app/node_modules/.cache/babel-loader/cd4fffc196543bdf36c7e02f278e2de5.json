{"ast":null,"code":"import _classCallCheck from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wittenber0/Desktop/mqp/nextgenapp/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wittenber0/Desktop/mqp/nextgenapp/app/src/components/FlowPage.js\";\nimport React, { Component } from 'react';\nimport TableComponent from './TableComponent';\nimport PageWrapper from './PageWrapper';\nimport Button from '@material-ui/core/Button';\nimport PolicyComponent from './PolicyComponent';\nimport DownloadLink from \"react-download-link\";\nimport phase1table from '../Data/phase1data';\nvar tableRows = [\"Flow Id\", \"Time\", \"Host Id\", \"Source Ip\", \"Destination Ip\", \"Source Host\", \"Destination Host\", \"Source Port\", \"Destination Port\", \"Protocol\", \"Flags\", \"Path\", \"Options\"];\nvar tableData = [[1, \"2018-02-19 11:27:09\", 4, \"192.168.1.2\", \"192.168.1.1\", \"None\", \"None\", 59197, 137, \"UDP\", \"None\", \"None\"], [2, \"2018-02-20 11:27:09\", 5, \"192.168.1.6\", \"192.168.1.1\", \"None\", \"None\", 80, 80, \"TCP\", \"microsoftword.exe\", \"None\"]];\n\nvar FlowPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FlowPage, _React$Component);\n\n  function FlowPage(props) {\n    var _this;\n\n    _classCallCheck(this, FlowPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FlowPage).call(this, props));\n\n    _this.nextPhase = function () {\n      if (_this.state.phase === 3) {\n        _this.setState({\n          done: true\n        });\n\n        return;\n      }\n\n      _this.setState({\n        phase: _this.state.phase + 1,\n        rows: [\"Flow Id\", \"Time\", \"Host Id\", \"Source Ip\", \"Destination Ip\", \"Source Host\", \"Destination Host\", \"Source Port\", \"Destination Port\", \"Protocol\", \"Flags\", \"Extra\", \"Options\"],\n        data: [[3, \"2018-07-19 11:27:09\", 4, \"192.168.1.8\", \"192.168.1.1\", \"None\", \"None\", 59197, 137, \"UDP\", \"None\", \"GUI Text\"], [4, \"2018-02-20 11:27:09\", 5, \"192.168.1.6\", \"192.168.1.1\", \"None\", \"None\", 80, 80, \"TCP\", \"None\", \"GUI Text\"]]\n      });\n    };\n\n    _this.submitPolicies = function (p) {\n      _this.props.logs.push(new Date().getTime() + \": Policies Created : \" + p);\n\n      _this.nextPhase();\n    };\n\n    _this.state = {\n      phase: 1,\n      rows: phase1table.rows,\n      data: phase1table.data,\n      options: true,\n      done: false\n    };\n\n    var fs = require('fs');\n\n    fs.readFile('phase1data.txt', 'utf8', function (err, contents) {\n      console.log(\"here\" + contents);\n    });\n    console.log('after calling readFile');\n    return _this;\n  }\n\n  _createClass(FlowPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.done) {\n        this.props.logs.push(new Date().getTime() + \": Phase \" + this.state.phase);\n        return React.createElement(PageWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"page-contents\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"page-sub-title-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"page-sub-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Flow Data Phase \", this.state.phase)), React.createElement(TableComponent, {\n          rows: this.state.rows,\n          data: this.state.data,\n          logs: this.props.logs,\n          options: this.state.options,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(PolicyComponent, {\n          submitPolicies: this.submitPolicies,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(PageWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Results\"), this.props.logs.map(function (l, i) {\n          return React.createElement(\"p\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, l);\n        }), React.createElement(DownloadLink, {\n          filename: \"results.txt\",\n          exportFile: function exportFile() {\n            return _this2.props.logs;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Save\"));\n      }\n    }\n  }]);\n\n  return FlowPage;\n}(React.Component);\n\nexport default FlowPage;","map":{"version":3,"sources":["/home/wittenber0/Desktop/mqp/nextgenapp/app/src/components/FlowPage.js"],"names":["React","Component","TableComponent","PageWrapper","Button","PolicyComponent","DownloadLink","phase1table","tableRows","tableData","FlowPage","props","nextPhase","state","phase","setState","done","rows","data","submitPolicies","p","logs","push","Date","getTime","options","fs","require","readFile","err","contents","console","log","map","l","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TableComponent from './TableComponent';\nimport PageWrapper from './PageWrapper';\nimport Button from '@material-ui/core/Button';\nimport PolicyComponent from './PolicyComponent';\nimport DownloadLink from \"react-download-link\";\nimport phase1table from '../Data/phase1data';\n\nlet tableRows = [\"Flow Id\",\"Time\", \"Host Id\", \"Source Ip\", \"Destination Ip\", \"Source Host\", \"Destination Host\", \"Source Port\", \"Destination Port\", \"Protocol\", \"Flags\", \"Path\", \"Options\"];\nlet tableData = [[1,\"2018-02-19 11:27:09\", 4, \"192.168.1.2\", \"192.168.1.1\", \"None\", \"None\", 59197, 137, \"UDP\", \"None\", \"None\"],[2,\"2018-02-20 11:27:09\", 5, \"192.168.1.6\", \"192.168.1.1\", \"None\", \"None\", 80, 80, \"TCP\", \"microsoftword.exe\", \"None\"]];\n\nclass FlowPage extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {phase: 1, rows : phase1table.rows, data : phase1table.data, options : true, done : false};\n\n    var fs = require('fs');\n\n    fs.readFile('phase1data.txt', 'utf8', function(err, contents) {\n        console.log(\"here\" + contents);\n    });\n\n    console.log('after calling readFile');\n  }\n\n  nextPhase = () => {\n\n    if(this.state.phase === 3){\n      this.setState({done : true});\n      return;\n    }\n    this.setState({\n      phase : this.state.phase + 1,\n      rows : [\"Flow Id\",\"Time\", \"Host Id\", \"Source Ip\", \"Destination Ip\", \"Source Host\", \"Destination Host\", \"Source Port\", \"Destination Port\", \"Protocol\", \"Flags\", \"Extra\", \"Options\"],\n      data : [[3,\"2018-07-19 11:27:09\", 4, \"192.168.1.8\", \"192.168.1.1\", \"None\", \"None\", 59197, 137, \"UDP\", \"None\", \"GUI Text\"],[4,\"2018-02-20 11:27:09\", 5, \"192.168.1.6\", \"192.168.1.1\", \"None\", \"None\", 80, 80, \"TCP\", \"None\", \"GUI Text\"]]\n    });\n\n  }\n\n  submitPolicies = (p) =>{\n    this.props.logs.push((new Date()).getTime() + \": Policies Created : \"+ p );\n    this.nextPhase();\n  }\n\n  render(){\n\n    if(!this.state.done){\n      this.props.logs.push((new Date()).getTime()+\": Phase \"+this.state.phase);\n      return(\n        <PageWrapper>\n        <div className=\"page-contents\">\n          <div className=\"page-sub-title-div\">\n            <h2 className=\"page-sub-title\">Flow Data Phase {this.state.phase}</h2>\n          </div>\n          <TableComponent rows={this.state.rows} data={this.state.data} logs={this.props.logs} options={this.state.options}/>\n          <PolicyComponent submitPolicies={this.submitPolicies}/>\n        </div>\n        </PageWrapper>\n      )\n    }else{\n      return(\n        <PageWrapper>\n          <h2>Results</h2>\n          {this.props.logs.map((l, i)=>{\n            return(<p key={i}>{l}</p>);\n          })}\n          <DownloadLink filename=\"results.txt\" exportFile={() => this.props.logs}>Save</DownloadLink>\n        </PageWrapper>\n      )\n    }\n  }\n}\n\nexport default FlowPage;\n"]},"metadata":{},"sourceType":"module"}